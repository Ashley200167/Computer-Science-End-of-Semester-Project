# import the libraries to create games
import pygame, sys, random
from pygame.locals import *
import time

# initialize the game
pygame.init()

# define the animation speed in frames per second
FPS = 45
fpsClock = pygame.time.Clock()

# setup the canvas or surface on which objects will be displayed
surface_width = 600
surface_height = 500
DISPLAYSURF = pygame.display.set_mode((surface_width, surface_height))
pygame.display.set_caption('Maze')
screen = pygame.display.set_mode([600,500])
# define colors in RGB
WHITE = (255, 255, 255)
BLUE = (0, 0, 255)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLACK = (0, 0, 0)

screen.fill(WHITE)
paused = False

#Walls of maze
class Walls (object):
    def createList (self):
        walls = []
        #walls.append(pygame.Rect((x, y), (width, height)))
        walls.append(pygame.Rect((100, 48), (448, 8)))
        walls.append(pygame.Rect((100, 55), (7, 152)))
        walls.append(pygame.Rect((180, 200), (8, 64)))
        walls.append(pygame.Rect((268, 248), (8, 64)))
        walls.append(pygame.Rect((140, 88), (48, 32)))
        walls.append(pygame.Rect((220, 88), (64, 32)))
        walls.append(pygame.Rect((364, 88), (65, 32)))
        walls.append(pygame.Rect((460, 88), (49, 32)))
        walls.append(pygame.Rect((100, 200), (86, 8)))
        walls.append(pygame.Rect((140, 152), (48, 16)))
        walls.append(pygame.Rect((316, 55), (16, 65)))
        walls.append(pygame.Rect((540, 55), (8, 153)))
        walls.append(pygame.Rect((460, 200), (88, 8)))
        walls.append(pygame.Rect((460, 152), (49, 16)))
        walls.append(pygame.Rect((412, 152), (16, 112)))
        walls.append(pygame.Rect((364, 200), (50, 16)))
        walls.append(pygame.Rect((268, 152), (112, 16)))
        walls.append(pygame.Rect((316, 166), (16, 50)))
        walls.append(pygame.Rect((220, 152), (16, 112)))
        walls.append(pygame.Rect((235, 200), (49, 16)))
        walls.append(pygame.Rect((100, 256), (88, 8)))
        walls.append(pygame.Rect((460, 256), (89, 8)))
        walls.append(pygame.Rect((460, 296), (89, 8)))
        walls.append(pygame.Rect((460, 352), (88, 8)))
        walls.append(pygame.Rect((460, 296), (9, 64)))
        walls.append(pygame.Rect((412, 296), (17, 65)))
        walls.append(pygame.Rect((220, 296), (16, 64)))
        walls.append(pygame.Rect((460, 200), (8, 64)))
        walls.append(pygame.Rect((100, 296), (88, 8)))
        walls.append(pygame.Rect((179, 296), (9, 64)))
        walls.append(pygame.Rect((100, 352), (88, 8)))
        walls.append(pygame.Rect((100, 352), (8, 193)))
        walls.append(pygame.Rect((107, 440), (33, 16)))
        walls.append(pygame.Rect((100, 536), (448, 9)))
        walls.append(pygame.Rect((540, 352), (8, 193)))
        walls.append(pygame.Rect((508, 440), (34, 16)))
        walls.append(pygame.Rect((268, 248), (40, 8)))
        walls.append(pygame.Rect((340, 248), (41, 8)))
        walls.append(pygame.Rect((460, 200), (9, 64)))
        walls.append(pygame.Rect((139, 392), (49, 17)))
        walls.append(pygame.Rect((171, 406), (17, 51)))
        walls.append(pygame.Rect((220, 392), (64, 17)))
        walls.append(pygame.Rect((364, 392), (65, 17)))
        walls.append(pygame.Rect((460, 392), (49, 17)))
        walls.append(pygame.Rect((460, 406), (17, 51)))
        walls.append(pygame.Rect((412, 440), (17, 50)))
        walls.append(pygame.Rect((364, 488), (145, 17)))
        walls.append(pygame.Rect((267, 440), (114, 17)))
        walls.append(pygame.Rect((316, 358), (16, 51)))
        walls.append(pygame.Rect((220, 440), (16, 50)))
        walls.append(pygame.Rect((139, 488), (145, 17)))
        walls.append(pygame.Rect((372, 248), (9, 64)))
        walls.append(pygame.Rect((268, 304), (113, 7)))
        walls.append(pygame.Rect((268, 344), (112, 16)))
        walls.append(pygame.Rect((316, 455), (16, 50)))
        # This wall blocks off the central box area, as it is a trap for ghosts
        walls.append(pygame.Rect((268, 248), (112, 64)))
        return walls
#load the character
Character = pygame.image.load('assassin.jpg')
Character = pygame.transform.scale(Character, (50, 50))


#beginning position of character
Characterx = 550
Charactery = 450


gameOver = False
while gameOver == False:
    pressed = pygame.key.get_pressed()

#move the character
    if pressed[pygame.K_UP]:
        Charactery = Charactery - 5
        if Charactery <= 0:
            Charactery = 0
    if pressed[pygame.K_DOWN]:
        Charactery = Charactery + 5
        if Charactery >= 450:
            Charactery = 450
    if pressed[pygame.K_LEFT]:
        Characterx = Characterx - 5
        if Characterx <= 0:
            Characterx = 0
    if pressed[pygame.K_RIGHT]:
        Characterx = Characterx + 5
        if Characterx >= 550:
            Characterx = 550

#update the positions
    DISPLAYSURF.blit(Character, (Characterx, Charactery))
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            gameOver = True
            pygame.quit()
            sys.exit()

    #update the display at the properspeed
    pygame.display.update()
    fpsClock.tick(FPS)
